// Mocks generated by Mockito 5.0.16 from annotations
// in fakeslink/test/app/data/repositories/notification_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:fakeslink/app/data/model/notification_model.dart' as _i5;
import 'package:fakeslink/app/data/sources/notification_sources.dart' as _i3;
import 'package:fakeslink/app/domain/entities/notification.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSender_0 extends _i1.Fake implements _i2.Sender {}

/// A class which mocks [NotificationLocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationLocalSource extends _i1.Mock
    implements _i3.NotificationLocalSource {
  MockNotificationLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Notification>> getListNotifications(
          int? offset, String? type) =>
      (super.noSuchMethod(
              Invocation.method(#getListNotifications, [offset, type]),
              returnValue:
                  Future<List<_i2.Notification>>.value(<_i2.Notification>[]))
          as _i4.Future<List<_i2.Notification>>);
  @override
  _i4.Future<dynamic> cache(
          List<_i2.Notification>? notis, int? offset, String? type) =>
      (super.noSuchMethod(Invocation.method(#cache, [notis, offset, type]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NotificationRemoteSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationRemoteSource extends _i1.Mock
    implements _i3.NotificationRemoteSource {
  MockNotificationRemoteSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> createNotificationDevice(
          String? deviceId, String? oneSignalId) =>
      (super.noSuchMethod(
          Invocation.method(#createNotificationDevice, [deviceId, oneSignalId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteNotificationDevice(String? deviceId) => (super
      .noSuchMethod(Invocation.method(#deleteNotificationDevice, [deviceId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<List<_i5.NotificationModel>> getListNotifications(
          int? offset, String? type) =>
      (super.noSuchMethod(
              Invocation.method(#getListNotifications, [offset, type]),
              returnValue: Future<List<_i5.NotificationModel>>.value(
                  <_i5.NotificationModel>[]))
          as _i4.Future<List<_i5.NotificationModel>>);
  @override
  _i4.Future<void> markAsRead(_i2.NotificationDetails? details) =>
      (super.noSuchMethod(Invocation.method(#markAsRead, [details]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NotificationDetails].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationDetails extends _i1.Mock
    implements _i2.NotificationDetails {
  MockNotificationDetails() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  set id(int? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  _i2.Sender get sender => (super.noSuchMethod(Invocation.getter(#sender),
      returnValue: _FakeSender_0()) as _i2.Sender);
  @override
  set sender(_i2.Sender? _sender) =>
      super.noSuchMethod(Invocation.setter(#sender, _sender),
          returnValueForMissingStub: null);
  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  set title(String? _title) =>
      super.noSuchMethod(Invocation.setter(#title, _title),
          returnValueForMissingStub: null);
  @override
  String get details =>
      (super.noSuchMethod(Invocation.getter(#details), returnValue: '')
          as String);
  @override
  set details(String? _details) =>
      super.noSuchMethod(Invocation.setter(#details, _details),
          returnValueForMissingStub: null);
  @override
  String get createAt =>
      (super.noSuchMethod(Invocation.getter(#createAt), returnValue: '')
          as String);
  @override
  set createAt(String? _createAt) =>
      super.noSuchMethod(Invocation.setter(#createAt, _createAt),
          returnValueForMissingStub: null);
  @override
  String get type =>
      (super.noSuchMethod(Invocation.getter(#type), returnValue: '') as String);
  @override
  set type(String? _type) => super.noSuchMethod(Invocation.setter(#type, _type),
      returnValueForMissingStub: null);
  @override
  bool get isInBox =>
      (super.noSuchMethod(Invocation.getter(#isInBox), returnValue: false)
          as bool);
  @override
  Map<String, dynamic> toMap() =>
      (super.noSuchMethod(Invocation.method(#toMap, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  String toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []), returnValue: '')
          as String);
  @override
  String toString() => super.toString();
  @override
  _i4.Future<void> save() => (super.noSuchMethod(Invocation.method(#save, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> delete() =>
      (super.noSuchMethod(Invocation.method(#delete, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
