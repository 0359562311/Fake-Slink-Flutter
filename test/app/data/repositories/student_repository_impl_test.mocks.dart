// Mocks generated by Mockito 5.0.16 from annotations
// in fakeslink/test/app/data/repositories/student_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:fakeslink/app/data/model/administrative_class_model.dart'
    as _i3;
import 'package:fakeslink/app/data/model/student_model.dart' as _i2;
import 'package:fakeslink/app/data/sources/student_sources.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeStudentModel_0 extends _i1.Fake implements _i2.StudentModel {}

class _FakeAdministrativeClassModel_1 extends _i1.Fake
    implements _i3.AdministrativeClassModel {}

/// A class which mocks [StudentRemoteSouce].
///
/// See the documentation for Mockito's code generation for more information.
class MockStudentRemoteSouce extends _i1.Mock
    implements _i4.StudentRemoteSouce {
  MockStudentRemoteSouce() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.StudentModel> getProfile() => (super.noSuchMethod(
          Invocation.method(#getProfile, []),
          returnValue: Future<_i2.StudentModel>.value(_FakeStudentModel_0()))
      as _i5.Future<_i2.StudentModel>);
  @override
  _i5.Future<_i2.StudentModel> updateProfile(String? avatar, String? cover,
          String? address, String? phoneNumber) =>
      (super.noSuchMethod(
              Invocation.method(
                  #updateProfile, [avatar, cover, address, phoneNumber]),
              returnValue:
                  Future<_i2.StudentModel>.value(_FakeStudentModel_0()))
          as _i5.Future<_i2.StudentModel>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [StudentLocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockStudentLocalSource extends _i1.Mock
    implements _i4.StudentLocalSource {
  MockStudentLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.StudentModel?> getProfile() =>
      (super.noSuchMethod(Invocation.method(#getProfile, []),
              returnValue: Future<_i2.StudentModel?>.value())
          as _i5.Future<_i2.StudentModel?>);
  @override
  _i5.Future<void> cacheUser(_i2.StudentModel? studentModel) =>
      (super.noSuchMethod(Invocation.method(#cacheUser, [studentModel]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [StudentModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockStudentModel extends _i1.Mock implements _i2.StudentModel {
  MockStudentModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.AdministrativeClassModel get administrativeClass =>
      (super.noSuchMethod(Invocation.getter(#administrativeClass),
              returnValue: _FakeAdministrativeClassModel_1())
          as _i3.AdministrativeClassModel);
  @override
  String get studentId =>
      (super.noSuchMethod(Invocation.getter(#studentId), returnValue: '')
          as String);
  @override
  set studentId(String? _studentId) =>
      super.noSuchMethod(Invocation.setter(#studentId, _studentId),
          returnValueForMissingStub: null);
  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  set id(int? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  set name(String? _name) => super.noSuchMethod(Invocation.setter(#name, _name),
      returnValueForMissingStub: null);
  @override
  String get dob =>
      (super.noSuchMethod(Invocation.getter(#dob), returnValue: '') as String);
  @override
  set dob(String? _dob) => super.noSuchMethod(Invocation.setter(#dob, _dob),
      returnValueForMissingStub: null);
  @override
  set address(String? _address) =>
      super.noSuchMethod(Invocation.setter(#address, _address),
          returnValueForMissingStub: null);
  @override
  set avatar(String? _avatar) =>
      super.noSuchMethod(Invocation.setter(#avatar, _avatar),
          returnValueForMissingStub: null);
  @override
  set cover(String? _cover) =>
      super.noSuchMethod(Invocation.setter(#cover, _cover),
          returnValueForMissingStub: null);
  @override
  String get gender =>
      (super.noSuchMethod(Invocation.getter(#gender), returnValue: '')
          as String);
  @override
  set gender(String? _gender) =>
      super.noSuchMethod(Invocation.setter(#gender, _gender),
          returnValueForMissingStub: null);
  @override
  String get role =>
      (super.noSuchMethod(Invocation.getter(#role), returnValue: '') as String);
  @override
  set role(String? _role) => super.noSuchMethod(Invocation.setter(#role, _role),
      returnValueForMissingStub: null);
  @override
  set phoneNumber(String? _phoneNumber) =>
      super.noSuchMethod(Invocation.setter(#phoneNumber, _phoneNumber),
          returnValueForMissingStub: null);
  @override
  String get createAt =>
      (super.noSuchMethod(Invocation.getter(#createAt), returnValue: '')
          as String);
  @override
  set createAt(String? _createAt) =>
      super.noSuchMethod(Invocation.setter(#createAt, _createAt),
          returnValueForMissingStub: null);
  @override
  String get updateAt =>
      (super.noSuchMethod(Invocation.getter(#updateAt), returnValue: '')
          as String);
  @override
  set updateAt(String? _updateAt) =>
      super.noSuchMethod(Invocation.setter(#updateAt, _updateAt),
          returnValueForMissingStub: null);
  @override
  double get gpa =>
      (super.noSuchMethod(Invocation.getter(#gpa), returnValue: 0.0) as double);
  @override
  set gpa(double? _gpa) => super.noSuchMethod(Invocation.setter(#gpa, _gpa),
      returnValueForMissingStub: null);
  @override
  bool get isInBox =>
      (super.noSuchMethod(Invocation.getter(#isInBox), returnValue: false)
          as bool);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  String toString() => super.toString();
  @override
  _i5.Future<void> save() => (super.noSuchMethod(Invocation.method(#save, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> delete() =>
      (super.noSuchMethod(Invocation.method(#delete, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}
